{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoNewsApi.js","services/cryptoApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","newsCategory","count","url","headers","useGetCryptoNewsQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Text","Typography","Option","Select","demoImage","News","simplified","setNewsCategory","cryptoNews","data","value","gutter","span","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Homepage","isFetching","globalStats","stats","title","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","item","includes","e","currency","id","rank","extra","iconUrl","price","marketCap","change","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2b32ec8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons';\r\nimport icon from '../images/cryptocurrency.png';\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(screenSize <768) {\r\n            setActiveMenu(false);\r\n        }else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">\r\n                        BitupFix\r\n                    </Link>\r\n                </Typography.Title>\r\n                {<Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined/>\r\n\r\n                </Button>}\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                <Menu.Item icon={<HomeOutlined/>}>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<FundOutlined/>}>\r\n                    <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<BulbOutlined/>}>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n\r\n            )}\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '2b568eafdbmshd569ec196c1d847p1177f7jsn4692f012e7a2'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"2b568eafdbmshd569ec196c1d847p1177f7jsn4692f012e7a2\",\r\n}\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"crytoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(\"/exchanges\"),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\n\r\nexport const { useGetCryptosQuery,useGetExchangesQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 })\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    if(!cryptoNews?.value) return <Loader/>;\r\n    return (\r\n        <Row gutter={[ 24, 24 ]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins?.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\" blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }}src={news?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\" />\r\n                            </div>\r\n                            <p>\r\n                                {   news.description > 100 ? `${news.description.substring(0, 100)}...`\r\n                                 : news.description\r\n                                 }\r\n\r\n\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                 <div>\r\n                                     <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                 </div>\r\n                                 <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n\r\n\r\n                </Col>\r\n\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from '../components'\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return 'Loading...';\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats </Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Lastest Crypto Market News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useState, useEffect} from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        setCryptos(cryptosList?.data?.coins);\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\r\n\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    \r\n    if(isFetching) return < Loader/>;\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}/>\r\n                </div>\r\n\r\n            )}\r\n            \r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {\r\n                    cryptos?.map((currency) => (\r\n                        <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                            <Link to={`/crypto/${currency.id}`}>\r\n                                <Card \r\n                                    title={`${currency.rank}. ${currency.name}`}\r\n                                    extra={<img className=\"crypto-image\" src={currency.iconUrl}  /> }\r\n                                    hoverable\r\n                                >\r\n                                    <p>Price: {millify(currency.price)}</p>\r\n                                    <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                    <p>Daily Change: {millify(currency.change)}%</p>\r\n                                </Card>\r\n\r\n                            </Link>\r\n                        </Col>   \r\n                    ))\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography} from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({coinHistory, currentPrice, coinName}) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for(let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n         coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#00&1bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice} </Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import React, { useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\nimport Loader from './Loader';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if(isFetching) return <Loader />;\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n  \r\n\r\n    const stats = [\r\n      { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n      { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n      { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n      { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n      { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n      { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                     {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                  {cryptoDetails.name} live price in US Dollar (USD).\r\n                   View value statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select \r\n              defaultValue=\"7d\" \r\n              className=\"select-timeperiod\" \r\n              placeholder=\"Select Timeperiod\" \r\n              onChange={(value) => setTimePeriod(value)}>\r\n              {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n              <Col className=\"coin-value-statistics\">\r\n                <Col className=\"coin-value=statistics-heading\">\r\n                  <Title level={3} className=\"coin-detailes-heading\">\r\n                    {cryptoDetails.name} Value Statistics\r\n                  </Title>\r\n                  <p>\r\n                    An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.\r\n                  </p>\r\n                </Col>\r\n                {genericStats.map(({ icon, title, value }) => (\r\n                    <Col className=\"coin-stats\">\r\n                      <Col className=\"coin-stats-name\">\r\n                        <Text>{icon}</Text>\r\n                         <Text>{title}</Text>\r\n                      </Col>\r\n                      <Text className=\"stats\">{value}</Text>\r\n                    </Col>\r\n                  ))}\r\n              </Col>\r\n\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n              <Row className=\"coin-desc\">\r\n                <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n                    {HTMLReactParser(cryptoDetails.description)}\r\n              </Row>\r\n              <Col className=\"coin-links\">\r\n                <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                  {cryptoDetails.links?.map((link) => (\r\n                <Row className=\"coin-link\" key={link.name}>\r\n                  <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                  <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                </Row>\r\n              ))}\r\n            </Col>\r\n      </Col>\r\n\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space} from 'antd';\r\nimport {\r\n  Navbar,\r\n  Exchanges,\r\n  Homepage,\r\n  CryptoDetails,\r\n  Cryptocurrencies,\r\n  News,\r\n} from \"./components\";\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"navbar\">\r\n          <Navbar />\r\n        </div>\r\n        <div className=\"main\">\r\n          <Layout>\r\n            <div className=\"routes\">\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                <Homepage /></Route>\r\n\r\n                <Route exact path=\"/exchanges\" ><Exchanges /></Route>\r\n                <Route\r\n                  exact\r\n                  path=\"/cryptocurrencies\"\r\n                ><Cryptocurrencies /></Route>\r\n                <Route\r\n                  exact\r\n                  path=\"/crypto/:coinId\"><CryptoDetails /></Route>\r\n                <Route exact path=\"/news\"><News /></Route>\r\n              </Switch>\r\n            </div>\r\n          </Layout>\r\n\r\n          <div className=\"footer\">\r\n            <Typography.Title\r\n              level={5}\r\n              style={{ color: \"white\", textAlign: \"center\" }}\r\n            >\r\n              BitUpFix <br/>\r\n              All rights reserved\r\n            </Typography.Title>\r\n            <Space>\r\n              <Link to=\"/\">Home</Link>\r\n              <Link to=\"/exchanges\">Exchanges</Link>\r\n              <Link to=\"/news\">News</Link>\r\n            </Space>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}